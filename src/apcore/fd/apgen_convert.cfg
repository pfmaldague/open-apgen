DEFINE DESCRIPTOR NAME LIGHT_TIME DESCRIPTION "Descriptor taken from file \"light.fd\"" FILENAME $apgen_convert_dir/light.fd ADD
DEFINE DESCRIPTOR NAME DSN_ALLOC DESCRIPTION "Descriptor taken from file \"alloc.fd\"" FILENAME $apgen_convert_dir/alloc.fd ADD
DEFINE DESCRIPTOR NAME TOL DESCRIPTION "Descriptor taken from file \"tol.fd\"" FILENAME $apgen_convert_dir/tol.fd ADD
DEFINE DESCRIPTOR NAME APGEN_SASF_OUT DESCRIPTION "Descriptor taken from file \"apgen_sasf_out.fd\"" FILENAME $apgen_convert_dir/apgen_sasf_out.fd ADD
DEFINE DESCRIPTOR NAME VIEW_ALLOC DESCRIPTION "Descriptor taken from file \"vue.fd\"" FILENAME $apgen_convert_dir/vue.fd ADD
DEFINE DESCRIPTOR NAME CONFIG DESCRIPTION "Descriptor taken from file \"cfg.fd\"" FILENAME $apgen_convert_dir/cfg.fd ADD
DEFINE STRIP NAME tracking_only SELECT ALL CONDITION tracking_pass = "\"Y\"" METHOD EXTRACT ADD
DEFINE STRIP NAME vue_events SELECT RISE SELECT SET METHOD EXTRACT ADD
DEFINE STRIP NAME interesting_cfg_file_events SELECT ALL "TOL_FORMAT" Name SELECT ALL "TOL_STRIP" Name METHOD EXTRACT ADD
DEFINE STRIP NAME TOL_STRIP_no_hidden_resources DESCRIPTION "suppress hidden resources" SELECT RES CONDITION hidden_resource_positions(Name) != "0" SELECT TRANSIENT CONDITION hidden_resource_positions(Name) != "0" METHOD MASK ADD
DEFINE STRIP NAME TOL_STRIP_no_resources DESCRIPTION "suppress all resources" SELECT RES SELECT TRANSIENT METHOD MASK ADD
DEFINE STRIP NAME TOL_STRIP_no_transients DESCRIPTION "suppress transients (instantaneous resource changes)" SELECT TRANSIENT METHOD MASK ADD
DEFINE STRIP NAME TOL_STRIP_no_activity_ends DESCRIPTION "suppress activity ends" SELECT ACT_END METHOD MASK ADD
DEFINE STRIP NAME TOL_STRIP_errors_and_warnings_only DESCRIPTION "keep errors and warnings only" SELECT ERROR SELECT WARNING METHOD EXTRACT ADD
DEFINE FORMAT NAME alloc_output FREE DELIM "," FIELD alloc_instance ADD
DEFINE FORMAT NAME time_type_dss_number FREE DELIM "," FIELD UniversalTime FIELD RecordType FIELD DSSnumber ADD
DEFINE FORMAT NAME columns_tol FIXED DELIM "," FIELD UniversalTime HEAD "TIME" WIDTH 25 FIELD RecordType HEAD "rec.type" WIDTH 10 FIELD Name HEAD "name" WIDTH 22 FIELD WrappedDescription HEAD "descr." WIDTH 50 WRAP ADD
DEFINE FORMAT NAME TOL_FORMAT_time_etc DESCRIPTION "Time, Name, Attr., Param., Descr." FIXED DELIM "\\n" FIELD UniversalTime HEAD "TIME" WIDTH 22 FIELD Name HEAD "NAME" WIDTH 17 FIELD Type HEAD "TYPE" WIDTH 13 FIELD AttributeName() HEAD "ATTR." WIDTH 9 FIELD AttributeValue() HEAD "VALUE" WIDTH 14 WRAP FIELD ParameterName() HEAD "PARAM." WIDTH 16 FIELD ParameterValue() HEAD "VALUE" WIDTH 9 WRAP FIELD WrappedDescription HEAD "DESCR." WIDTH 45 WRAP ADD
DEFINE FORMAT NAME TOL_FORMAT_time_2 DESCRIPTION "Time, Name, Visibility, Descr." FIXED DELIM "\\n" FIELD UniversalTime HEAD "TIME" WIDTH 22 FIELD Name HEAD "NAME" WIDTH 17 FIELD Visibility HEAD "VIS." WIDTH 5 FIELD WrappedDescription HEAD "DESCR." WIDTH 45 WRAP ADD
DEFINE FORMAT NAME TOL_FORMAT_omit_id DESCRIPTION "Like Raw, but omits act. ID (for testing)" FREE DELIM "," FIELD UniversalTime FIELD RecordType FIELD Type FIELD Visibility FIELD AttributeName() FIELD AttributeValue() FIELD WrappedDescription FIELD Duration FIELD Legend FIELD Name FIELD ParameterName() FIELD ParameterValue() ADD
DEFINE PROGRAM NAME instance_postfix "global";\
 "global string post \"\"";\
 "post = \"    end activity instance DSN_ALLOC\\n\\n\"" ADD
DEFINE PROGRAM NAME write_start_mark "global";\
 "print \"\nAPGEN START READING HERE>>>>>>>>>>>>\"" ADD
DEFINE PROGRAM NAME write_alloc_apf \
 "print alloc_instance, \"\\n\"" ADD
DEFINE PROGRAM NAME write_stop_mark "global";\
 "print \"<<<<<<<<<<<<APGEN STOP READING HERE\n\"" ADD
DEFINE PROGRAM NAME initialize_instance_prefix "global";\
 "global string alloc_instance_std \"\"";\
 "alloc_instance_std = \"activity instance DSN_ALLOC of type DSN_allocation\\n\"";\
 "alloc_instance_std = alloc_instance_std ++ \"     begin\\n\"";\
 "alloc_instance_std = alloc_instance_std ++ \"        attributes\\n\"";\
 "alloc_instance_std = alloc_instance_std ++ \"            \\\"Start\\\" = \"" ADD
DEFINE PROGRAM NAME write_light_time_resources DESCRIPTION "Writes two resources for up and down lighttimes" "global";\
 "integer wli \"\"";\
 "wli = 1";\
 "print \"apgen version \\\"V1\\\"\\n\\nresource upleg_time: nonconsumable float\\n\"";\
 "print \"    begin\\n\"";\
 "print \"        profile\\n\"";\
 "print \"            \", up_seconds[1], \" until \", UniversalTime[1], \"\\n\"";\
 "while wli < TotalNumberOfRecords";\
 "  wli = wli + 1";\
 "  print \"            then \", up_seconds[wli], \" until \", UniversalTime[wli], \"\\n\"";\
 "endwhile";\
 "print \"            then \", up_seconds[TotalNumberOfRecords], \";\\n\"";\
 "print \"        usage\\n\"";\
 "print \"            1.0;\\n\"";\
 "print \"    end resource upleg_time\\n\"";\
 "wli = 1";\
 "print \"resource downleg_time: nonconsumable float\\n\"";\
 "print \"    begin\\n\"";\
 "print \"        profile\\n\"";\
 "print \"            \", down_seconds[1], \" until \", UniversalTime[1], \"\\n\"";\
 "while wli < TotalNumberOfRecords";\
 "  wli = wli + 1";\
 "  print \"            then \", down_seconds[wli], \" until \", UniversalTime[wli], \"\\n\"";\
 "endwhile";\
 "print \"            then \", down_seconds[TotalNumberOfRecords], \";\\n\"";\
 "print \"        usage\\n\"";\
 "print \"            1.0;\\n\"";\
 "print \"    end resource downleg_time\\n\"" ADD
DEFINE PROGRAM NAME vue_post_and_pre_fix "global";\
 "global string vue_instance_prefix \"\"";\
 "global string vue_instance_postfix \"\"";\
 "vue_instance_prefix = \"activity instance VUE_PERIOD of type station_set\\n\"";\
 "vue_instance_prefix = vue_instance_prefix ++ \"     begin\\n\"";\
 "vue_instance_prefix = vue_instance_prefix ++ \"        attributes\\n\"";\
 "vue_instance_prefix = vue_instance_prefix ++ \"            \\\"Start\\\" = \"";\
 "vue_instance_postfix = \"    end activity instance VUE_PERIOD\\n\\n\"" ADD
DEFINE PROGRAM NAME write_vue_apf "if vue_events = \"Y\"";\
 "  print vue_instance, \"\\n\"";\
 "endif" ADD
DEFINE PROGRAM NAME write_cfg_strips_and_formats "if interesting_cfg_file_events = \"Y\"";\
 "  if RecordType = \"strip\"";\
 "    print Name, \" \", description, \"\\n\"";\
 "  else if RecordType = \"format\"";\
 "    print Name, \" \", description, \"\\n\"";\
 "  endif";\
 "endif" ADD
DEFINE PROGRAM NAME write_vue_aaf "global";\
 "integer aaf_i \"\"";\
 "aaf_i <= 1";\
 "print \"apgen version \\\"V1\\\"\\n\"";\
 "while aaf_i <= number_of_stations";\
 "    print \"\\n\"";\
 "    print \"resource \", DSS_id( aaf_i ), \"_view_status_for_downlink : state string\\n\"";\
 "    print \"    begin\\n\"";\
 "    print \"  parameters\\n\"";\
 "    print \"    neededState : string default to \\\"SET\\\";\\n\"";\
 "    print \"  states\\n\"";\
 "    print \"    \\\"SET\\\",\\\"RISE\\\",\\\"MAX_ELEVATION\\\",\\\"MIN_ELEVATION\\\";\\n\"";\
 "    print \"  profile\\n\"";\
 "    print \"    \\\"SET\\\";\\n\"";\
 "    print \"  usage\\n\"";\
 "    print \"    neededState ;\\n\"";\
 "    print \"    end resource \", DSS_id( aaf_i ), \"_view_status_for_downlink\\n\"";\
 "    print \"\\n\"";\
 "    print \"\\n\"";\
 "    aaf_i = aaf_i + 1";\
 "endwhile";\
 "aaf_i = 1";\
 "while aaf_i <= number_of_stations";\
 "    print \"\\n\"";\
 "    print \"resource \", DSS_id( aaf_i ), \"_view_status_for_uplink : state string\\n\"";\
 "    print \"    begin\\n\"";\
 "    print \"  parameters\\n\"";\
 "    print \"    neededState : string default to \\\"SET\\\";\\n\"";\
 "    print \"  states\\n\"";\
 "    print \"    \\\"SET\\\",\\\"RISE\\\",\\\"MAX_ELEVATION\\\",\\\"MIN_ELEVATION\\\";\\n\"";\
 "    print \"  profile\\n\"";\
 "    print \"    \\\"SET\\\";\\n\"";\
 "    print \"  usage\\n\"";\
 "    print \"    neededState ;\\n\"";\
 "    print \"    end resource \", DSS_id( aaf_i ), \"_view_status_for_uplink\\n\"";\
 "    print \"\\n\"";\
 "    print \"\\n\"";\
 "    aaf_i = aaf_i + 1";\
 "endwhile";\
 "print \"\\n\"";\
 "print \"activity type station_set\\n\"";\
 "print \"  begin\\n\"";\
 "print \"  attributes\\n\"";\
 "print \"    \\\"Legend\\\" = \\\"View Periods (Grnd Time)\\\";\\n\"";\
 "print \"    \\\"Duration\\\" = 00:00:01;\\n\"";\
 "print \"    \\\"Color\\\" = \\\"Spring Green\\\";\\n\"";\
 "print \"  parameters\\n\"";\
 "print \"    station: local integer default to \", DSS_id(1), \" ;\\n\"";\
 "print \"    action: local string default to \\\"RISE\\\";\\n\"";\
 "print \"\\n\"";\
 "print \"  resource usage\\n\"";\
 "print \"\\n\"";\
 "aaf_i = 1";\
 "while aaf_i <= number_of_stations";\
 "    print \"    set \", DSS_id( aaf_i ), \"_view_status_for_downlink( action )\\n\"";\
 "    print \"        at start - from_seconds(downleg_time.currentval())\\n\"";\
 "    print \"        when station == \", DSS_number( aaf_i ), \" ;\\n\"";\
 "    print \"    set \", DSS_id( aaf_i ), \"_view_status_for_uplink( action )\\n\"";\
 "    print \"        at start + from_seconds(upleg_time.currentval())\\n\"";\
 "    print \"        when station == \", DSS_number( aaf_i ), \" ;\\n\"";\
 "    aaf_i = aaf_i + 1";\
 "endwhile";\
 "print \"  end activity type station_set\\n\"" ADD
DEFINE PROGRAM NAME write_alloc_aaf "global";\
 "integer aaf_i \"\"";\
 "aaf_i <= 1";\
 "print \"apgen version \\\"V1\\\"\\n\"";\
 "while aaf_i <= number_of_stations";\
 "    print \"\\n\"";\
 "    print \"resource \", DSS_id( aaf_i ), \"_AvailableForUplink : state string\\n\"";\
 "    print \"    begin\\n\"";\
 "    print \"  parameters\\n\"";\
 "    print \"    neededState : string default to \\\"INACTIVE\\\";\\n\"";\
 "    print \"  states\\n\"";\
 "    print \"    \\\"INACTIVE\\\",\\\"ACTIVE\\\";\\n\"";\
 "    print \"  profile\\n\"";\
 "    print \"    \\\"INACTIVE\\\";\\n\"";\
 "    print \"  usage\\n\"";\
 "    print \"    neededState ;\\n\"";\
 "    print \"    end resource \", DSS_id( aaf_i ), \"_AvailableForUplink\\n\"";\
 "    print \"\\n\"";\
 "    print \"resource \", DSS_id( aaf_i ), \"_AvailableForDownlink : state string\\n\"";\
 "    print \"    begin\\n\"";\
 "    print \"  parameters\\n\"";\
 "    print \"    neededState : string default to \\\"INACTIVE\\\";\\n\"";\
 "    print \"  states\\n\"";\
 "    print \"    \\\"INACTIVE\\\",\\\"ACTIVE\\\";\\n\"";\
 "    print \"  profile\\n\"";\
 "    print \"    \\\"INACTIVE\\\";\\n\"";\
 "    print \"  usage\\n\"";\
 "    print \"    neededState ;\\n\"";\
 "    print \"    end resource \", DSS_id( aaf_i ), \"_AvailableForDownlink\\n\"";\
 "    print \"\\n\"";\
 "    aaf_i = aaf_i + 1";\
 "endwhile";\
 "print \"\\n\"";\
 "print \"activity type PreCal\\n\"";\
 "print \"  begin\\n\"";\
 "print \"  attributes\\n\"";\
 "print \"    \\\"Legend\\\" = \\\"Calibration (Grnd Time)\\\";\\n\"";\
 "print \"    \\\"Duration\\\" = from_seconds(given_duration);\\n\"";\
 "print \"    \\\"Color\\\" = \\\"Hot Pink\\\";\\n\"";\
 "print \"  parameters\\n\"";\
 "print \"    given_duration: local float default to 0. ;\\n\"";\
 "print \"  end activity type PreCal\\n\"";\
 "print \"\\n\"";\
 "print \"activity type TotalAllocation\\n\"";\
 "print \"  begin\\n\"";\
 "print \"  attributes\\n\"";\
 "print \"    \\\"Legend\\\" = \\\"Total Alloc (Grnd Time)\\\";\\n\"";\
 "print \"    \\\"Duration\\\" = from_seconds(given_duration);\\n\"";\
 "print \"    \\\"Color\\\" = \\\"Orange\\\";\\n\"";\
 "print \"  parameters\\n\"";\
 "print \"    given_duration: local float default to 0. ;\\n\"";\
 "print \"  end activity type TotalAllocation\\n\"";\
 "print \"\\n\"";\
 "print \"activity type PostCal\\n\"";\
 "print \"  begin\\n\"";\
 "print \"  attributes\\n\"";\
 "print \"    \\\"Legend\\\" = \\\"Calibration (Grnd Time)\\\";\\n\"";\
 "print \"    \\\"Duration\\\" = from_seconds(given_duration);\\n\"";\
 "print \"    \\\"Color\\\" = \\\"Spring Green\\\";\\n\"";\
 "print \"  parameters\\n\"";\
 "print \"    given_duration: local float default to 0. ;\\n\"";\
 "print \"  end activity type PostCal\\n\"";\
 "print \"    \\n\"";\
 "print \"\\n\"";\
 "print \"activity type DSN_allocation\\n\"";\
 "print \"  begin\\n\"";\
 "print \"  attributes\\n\"";\
 "print \"    \\\"Legend\\\" = \\\"DSN Alloc (Grnd Time)\\\";\\n\"";\
 "print \"    \\\"Duration\\\" = from_seconds(usable_allocation) ;\\n\"";\
 "print \"  parameters\\n\"";\
 "print \"    pre_cal_duration: local float default to 0.;\\n\"";\
 "print \"    usable_allocation: local float default to 0.;\\n\"";\
 "print \"    post_cal_duration: local float default to 0.;\\n\"";\
 "print \"    location: local integer default to 0;\\n\"";\
 "print \"  resource usage\\n\"";\
 "print \"\\n\"";\
 "aaf_i = 1";\
 "while aaf_i <= number_of_stations";\
 "    print \"    use \", DSS_id( aaf_i ), \"_AvailableForUplink( \\\"ACTIVE\\\" ) from start + from_seconds(upleg_time.currentval())\\n\"";\
 "    print \"        to finish + from_seconds(upleg_time.currentval())\\n\" ";\
 "    print \"        when location == \", DSS_number( aaf_i ), \" ;\\n\"";\
 "    print \"    use \", DSS_id( aaf_i ), \"_AvailableForDownlink( \\\"ACTIVE\\\" ) from start - from_seconds(downleg_time.currentval())\\n\"";\
 "    print \"        to finish - from_seconds(downleg_time.currentval())\\n\" ";\
 "    print \"        when location == \", DSS_number( aaf_i ), \" ;\\n\"";\
 "    aaf_i = aaf_i + 1";\
 "endwhile";\
 "print \"  decomposition\\n\"";\
 "print \"    PreCal( pre_cal_duration ) at start - from_seconds(pre_cal_duration) ;\\n\"";\
 "print \"    TotalAllocation( pre_cal_duration + usable_allocation + post_cal_duration ) at start - from_seconds(pre_cal_duration) ;\\n\"";\
 "print \"    PostCal( post_cal_duration ) at finish ;\\n\"";\
 "print \"  end activity type DSN_allocation\\n\"" ADD
DEFINE STATE NAME vue_instance TYPE string INIT "\"\"" EVALUATE vue_events "vue_instance_prefix ++ UniversalTime ++ \";\\n    parameters\\n        (\" ++ DSS_station ++ \",\\\"\" ++ RecordType ++ \"\\\");\\n\" ++ vue_instance_postfix" ADD
DEFINE STATE NAME alloc_instance TYPE string INIT "\"\"" EVALUATE ALWAYS "alloc_instance_std ++ Time2 ++ \";\\n        \\\"Duration\\\"=from_seconds(\" ++ UsableAllocation ++ \");\\n    parameters\\n        (\" ++ PreCal ++ \",\" ++ UsableAllocation ++ \",\" ++ PostCal ++ \",\" ++ StationLoc ++ \");\\n\" ++ post" ADD
DEFINE TRIGGER NAME tracking_pass SELECT ALL "$<TKG PASS" RecordType ADD
DEFINE TRIGGER NAME vue_events SELECT RISE SELECT SET ADD
DEFINE TRIGGER NAME interesting_cfg_file_events SELECT ALL "TOL_STRIP" Name SELECT ALL "TOL_FORMAT" Name ADD
DEFINE SCRIPT NAME convert_to_apgen_format DESCRIPTION "Used by apgen to convert alloc & lighttime files to apf format" \
 DEFINE STRIP NAME rec_one_only SELECT ALL CONDITION CurrentRecord = "1" METHOD EXTRACT APPLY;\
 DEFINE FORMAT NAME right_script FREE DELIM "," FIELD ScriptContents APPLY;\
 FILE PRINT FILENAME std.scr;\
 DEFINE SCRIPT NAME s FILENAME std.scr PLAYBACK;\
 FILE EXIT NOSAVE;\
 ADD
